buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:2.2.1'
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
  }
}

repositories {
  mavenCentral()
  jcenter()
}

apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'

ext {
  bintrayRepo = 'maven'
  bintrayName = 'playbasis-sdk'

  publishedGroupId = 'com.playbasis'
  libraryName = 'playbasis-sdk'
  artifact = 'playbasis-sdk'

  libraryDescription = 'The SDK to connect to playbasis API'

  siteUrl = 'https://github.com/playbasis/native-sdk-android'
  gitUrl = 'https://github.com/playbasis/native-sdk-android.git'

  libraryVersion = '0.0.1'

  developerId = 'nakarinj'
  developerName = 'Nakarin Jupattanakul'
  developerEmail = 'nakarin.j@playbasis.com'

  licenseName = 'The Apache Software License, Version 2.0'
  licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
  allLicenses = ["Apache-2.0"]
}


android {
  compileSdkVersion 21
  buildToolsVersion "21.1.2"

  defaultConfig {
    minSdkVersion 15
    targetSdkVersion 21
    versionCode 1
    versionName "0.1"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  testCompile 'junit:junit:4.12'
  compile 'com.android.support:appcompat-v7:21.0.3'
  compile 'com.google.zxing:core:3.2.1'

  // Dagger 2
  apt 'com.google.dagger:dagger-compiler:2.0'
  compile 'com.google.dagger:dagger:2.0'
  provided 'javax.annotation:jsr250-api:1.0'

  // Butterknife
  compile 'com.jakewharton:butterknife:8.0.1'
  apt 'com.jakewharton:butterknife-compiler:8.0.1'

  // Retrofit
  compile 'com.squareup.retrofit2:retrofit:2.0.2'
  compile 'com.squareup.retrofit2:converter-gson:2.0.2'
  compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
  compile 'com.squareup.okhttp3:okhttp-urlconnection:3.2.0'
  compile 'com.squareup.okhttp3:okhttp:3.2.0'
  compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'

  // Glide
  compile 'com.github.bumptech.glide:glide:3.7.0'

  // GSON
  compile 'com.google.code.gson:gson:2.4'

  // RxAndroid + RxJava
  compile 'io.reactivex:rxandroid:1.1.0'
  compile 'io.reactivex:rxjava:1.1.0'

  // BlurDialogFragment
  //compile 'fr.tvbarthel.blurdialogfragment:lib:2.1.6'

  compile 'joda-time:joda-time:2.9.4'
}

apply plugin: 'com.github.dcendents.android-maven'

group = publishedGroupId                               // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

apply plugin: 'com.jfrog.bintray'

version = libraryVersion
archivesBaseName = libraryName

task createJavadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    title = archivesBaseName + " " + version
    doLast {
        copy {
            from "src/main/doc-files"
            into "$buildDir/docs/javadoc"
        }
    }
}

task androidJavadocsJar(type: Jar, dependsOn: createJavadoc) {
    classifier = 'javadoc'
    from createJavadoc.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        override = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}